<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.dao.TeacherDesireDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.example.demo.entity.TeacherDesireEntity" id="teacherDesireMap">
        <result property="id" column="id"/>
        <result property="subject" column="subject"/>
        <result property="area" column="area"/>
        <result property="coachWay" column="coach_way"/>
        <result property="payment" column="payment"/>
        <result property="teacherId" column="teacher_id"/>
    </resultMap>

    <select id="queryObject" resultMap="teacherDesireMap">
        select * from teacher_desire where id = #{value}
    </select>

	<select id="queryList" resultMap="teacherDesireMap">
		select * from teacher_desire
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from teacher_desire 
	</select>
	 
	<insert id="save" parameterType="com.example.demo.entity.TeacherDesireEntity">
		insert into teacher_desire
		(
			`id`, 
			`subject`, 
			`area`, 
			`coach_way`, 
			`payment`, 
			`teacher_id`
		)
		values
		(
			#{id}, 
			#{subject}, 
			#{area}, 
			#{coachWay}, 
			#{payment}, 
			#{teacherId}
		)
	</insert>

    <insert id="saveSelective" parameterType="com.example.demo.entity.TeacherDesireEntity">
        insert into teacher_desire
        (
									<if test="id != null">
                `id`,                 </if>
												<if test="subject != null">
                `subject`,                 </if>
												<if test="area != null">
                `area`,                 </if>
												<if test="coachWay != null">
                `coach_way`,                 </if>
												<if test="payment != null">
                `payment`,                 </if>
												<if test="teacherId != null">
                `teacher_id`                </if>
					        )
        values
        (
									<if test="id != null">
                    #{id}, 				</if>
												<if test="subject != null">
                    #{subject}, 				</if>
												<if test="area != null">
                    #{area}, 				</if>
												<if test="coachWay != null">
                    #{coachWay}, 				</if>
												<if test="payment != null">
                    #{payment}, 				</if>
												<if test="teacherId != null">
                    #{teacherId}				</if>
					        )
    </insert>



	<update id="updateSelective" parameterType="com.example.demo.entity.TeacherDesireEntity">
		update teacher_desire 
		<set>
			<if test="subject != null">`subject` = #{subject}, </if>
			<if test="area != null">`area` = #{area}, </if>
			<if test="coachWay != null">`coach_way` = #{coachWay}, </if>
			<if test="payment != null">`payment` = #{payment}, </if>
			<if test="teacherId != null">`teacher_id` = #{teacherId}</if>
		</set>
		where id = #{id}
	</update>

    <update id="update" parameterType="com.example.demo.entity.TeacherDesireEntity">
        update teacher_desire
        <set>
														                    `subject` = #{subject}, 											                    `area` = #{area}, 											                    `coach_way` = #{coachWay}, 											                    `payment` = #{payment}, 											                    `teacher_id` = #{teacherId}							        </set>
        where id = #{id}
    </update>
	
	<delete id="delete">
		delete from teacher_desire where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from teacher_desire where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>