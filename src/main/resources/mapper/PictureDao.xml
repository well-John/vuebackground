<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.dao.PictureDao">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.example.demo.entity.PictureEntity" id="pictureMap">
        <result property="id" column="id"/>
        <result property="teacherId" column="teacher_id"/>
        <result property="type" column="type"/>
        <result property="path" column="path"/>
        <result property="uploadTime" column="upload_time"/>
        <result property="status" column="status"/>
    </resultMap>

    <select id="queryObject" resultMap="pictureMap">
        select * from picture where id = #{value}
    </select>

    <select id="queryList" resultMap="pictureMap">
        select * from picture
        <where>
            <if test="startTime != null and startTime.trim() != ''">
                and upload_time <![CDATA[ >= ]]> #{startTime}
            </if>
            <if test="endTime != null and endTime.trim() != ''">
                and upload_time <![CDATA[ <= ]]> #{endTime}
            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from picture
        <where>
            <if test="startTime != null and startTime.trim() != ''">
                and upload_time <![CDATA[ >= ]]> #{startTime}
            </if>
            <if test="endTime != null and endTime.trim() != ''">
                and upload_time <![CDATA[ <= ]]> #{endTime}
            </if>
        </where>
    </select>

    <insert id="save" parameterType="com.example.demo.entity.PictureEntity">
		insert into picture
		(
			`id`, 
			`teacher_id`, 
			`type`, 
			`path`, 
			`upload_time`, 
			`status`
		)
		values
		(
			#{id}, 
			#{teacherId}, 
			#{type}, 
			#{path}, 
			#{uploadTime}, 
			#{status}
		)
	</insert>

    <insert id="saveSelective" parameterType="com.example.demo.entity.PictureEntity">
        insert into picture
        (
        <if test="id != null">
            `id`,
        </if>
        <if test="teacherId != null">
            `teacher_id`,
        </if>
        <if test="type != null">
            `type`,
        </if>
        <if test="path != null">
            `path`,
        </if>
        <if test="uploadTime != null">
            `upload_time`,
        </if>
        <if test="status != null">
            `status`
        </if>
        )
        values
        (
        <if test="id != null">
            #{id},
        </if>
        <if test="teacherId != null">
            #{teacherId},
        </if>
        <if test="type != null">
            #{type},
        </if>
        <if test="path != null">
            #{path},
        </if>
        <if test="uploadTime != null">
            #{uploadTime},
        </if>
        <if test="status != null">
            #{status}
        </if>
        )
    </insert>


    <update id="updateSelective" parameterType="com.example.demo.entity.PictureEntity">
        update picture
        <set>
            <if test="teacherId != null">`teacher_id` = #{teacherId},</if>
            <if test="type != null">`type` = #{type},</if>
            <if test="path != null">`path` = #{path},</if>
            <if test="uploadTime != null">`upload_time` = #{uploadTime},</if>
            <if test="status != null">`status` = #{status}</if>
        </set>
        where id = #{id}
    </update>

    <update id="update" parameterType="com.example.demo.entity.PictureEntity">
        update picture
        <set>
            `teacher_id` = #{teacherId}, `type` = #{type}, `path` = #{path}, `upload_time` = #{uploadTime}, `status` =
            #{status}
        </set>
        where id = #{id}
    </update>

    <delete id="delete">
		delete from picture where id = #{value}
	</delete>

    <delete id="deleteBatch">
        delete from picture where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>