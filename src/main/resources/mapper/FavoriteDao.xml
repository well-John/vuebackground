<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.dao.FavoriteDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.example.demo.entity.FavoriteEntity" id="favoriteMap">
        <result property="id" column="id"/>
        <result property="teacherId" column="teacher_id"/>
        <result property="name" column="name"/>
        <result property="sex" column="sex"/>
        <result property="education" column="education"/>
        <result property="schoolMajor" column="school_major"/>
        <result property="subject" column="subject"/>
        <result property="studentId" column="student_id"/>
    </resultMap>

    <select id="queryObject" resultMap="favoriteMap">
        select * from favorite where id = #{value}
    </select>

	<select id="queryList" resultMap="favoriteMap">
		select * from favorite
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from favorite 
	</select>
	 
	<insert id="save" parameterType="com.example.demo.entity.FavoriteEntity">
		insert into favorite
		(
			`id`, 
			`teacher_id`, 
			`name`, 
			`sex`, 
			`education`, 
			`school_major`, 
			`subject`, 
			`student_id`
		)
		values
		(
			#{id}, 
			#{teacherId}, 
			#{name}, 
			#{sex}, 
			#{education}, 
			#{schoolMajor}, 
			#{subject}, 
			#{studentId}
		)
	</insert>

    <insert id="saveSelective" parameterType="com.example.demo.entity.FavoriteEntity">
        insert into favorite
        (
									<if test="id != null">
                `id`,                 </if>
												<if test="teacherId != null">
                `teacher_id`,                 </if>
												<if test="name != null">
                `name`,                 </if>
												<if test="sex != null">
                `sex`,                 </if>
												<if test="education != null">
                `education`,                 </if>
												<if test="schoolMajor != null">
                `school_major`,                 </if>
												<if test="subject != null">
                `subject`,                 </if>
												<if test="studentId != null">
                `student_id`                </if>
					        )
        values
        (
									<if test="id != null">
                    #{id}, 				</if>
												<if test="teacherId != null">
                    #{teacherId}, 				</if>
												<if test="name != null">
                    #{name}, 				</if>
												<if test="sex != null">
                    #{sex}, 				</if>
												<if test="education != null">
                    #{education}, 				</if>
												<if test="schoolMajor != null">
                    #{schoolMajor}, 				</if>
												<if test="subject != null">
                    #{subject}, 				</if>
												<if test="studentId != null">
                    #{studentId}				</if>
					        )
    </insert>



	<update id="updateSelective" parameterType="com.example.demo.entity.FavoriteEntity">
		update favorite 
		<set>
			<if test="teacherId != null">`teacher_id` = #{teacherId}, </if>
			<if test="name != null">`name` = #{name}, </if>
			<if test="sex != null">`sex` = #{sex}, </if>
			<if test="education != null">`education` = #{education}, </if>
			<if test="schoolMajor != null">`school_major` = #{schoolMajor}, </if>
			<if test="subject != null">`subject` = #{subject}, </if>
			<if test="studentId != null">`student_id` = #{studentId}</if>
		</set>
		where id = #{id}
	</update>

    <update id="update" parameterType="com.example.demo.entity.FavoriteEntity">
        update favorite
        <set>
														                    `teacher_id` = #{teacherId}, 											                    `name` = #{name}, 											                    `sex` = #{sex}, 											                    `education` = #{education}, 											                    `school_major` = #{schoolMajor}, 											                    `subject` = #{subject}, 											                    `student_id` = #{studentId}							        </set>
        where id = #{id}
    </update>
	
	<delete id="delete">
		delete from favorite where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from favorite where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>