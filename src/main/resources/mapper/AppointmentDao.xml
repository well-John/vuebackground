<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.dao.AppointmentDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.example.demo.entity.AppointmentEntity" id="appointmentMap">
        <result property="id" column="id"/>
        <result property="appointmentDate" column="appointment_date"/>
        <result property="teacherId" column="teacher_id"/>
        <result property="studentId" column="student_id"/>
        <result property="organiser" column="organiser"/>
        <result property="status" column="status"/>
        <result property="teacherName" column="teacher_name"/>
    </resultMap>

    <select id="queryObject" resultMap="appointmentMap">
        select * from appointment where id = #{value}
    </select>

	<select id="queryList" resultMap="appointmentMap">
		select * from appointment
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from appointment 
	</select>
	 
	<insert id="save" parameterType="com.example.demo.entity.AppointmentEntity" useGeneratedKeys="true" keyProperty="id">
		insert into appointment
		(
			`appointment_date`, 
			`teacher_id`, 
			`student_id`, 
			`organiser`, 
			`status`, 
			`teacher_name`
		)
		values
		(
			#{appointmentDate}, 
			#{teacherId}, 
			#{studentId}, 
			#{organiser}, 
			#{status}, 
			#{teacherName}
		)
	</insert>

    <insert id="saveSelective" parameterType="com.example.demo.entity.AppointmentEntity" useGeneratedKeys="true" keyProperty="id">
        insert into appointment
        (
														<if test="appointmentDate != null">
                `appointment_date`,                 </if>
												<if test="teacherId != null">
                `teacher_id`,                 </if>
												<if test="studentId != null">
                `student_id`,                 </if>
												<if test="organiser != null">
                `organiser`,                 </if>
												<if test="status != null">
                `status`,                 </if>
												<if test="teacherName != null">
                `teacher_name`                </if>
					        )
        values
        (
														<if test="appointmentDate != null">
                    #{appointmentDate}, 				</if>
												<if test="teacherId != null">
                    #{teacherId}, 				</if>
												<if test="studentId != null">
                    #{studentId}, 				</if>
												<if test="organiser != null">
                    #{organiser}, 				</if>
												<if test="status != null">
                    #{status}, 				</if>
												<if test="teacherName != null">
                    #{teacherName}				</if>
					        )
    </insert>



	<update id="updateSelective" parameterType="com.example.demo.entity.AppointmentEntity">
		update appointment 
		<set>
			<if test="appointmentDate != null">`appointment_date` = #{appointmentDate}, </if>
			<if test="teacherId != null">`teacher_id` = #{teacherId}, </if>
			<if test="studentId != null">`student_id` = #{studentId}, </if>
			<if test="organiser != null">`organiser` = #{organiser}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="teacherName != null">`teacher_name` = #{teacherName}</if>
		</set>
		where id = #{id}
	</update>

    <update id="update" parameterType="com.example.demo.entity.AppointmentEntity">
        update appointment
        <set>
														                    `appointment_date` = #{appointmentDate}, 											                    `teacher_id` = #{teacherId}, 											                    `student_id` = #{studentId}, 											                    `organiser` = #{organiser}, 											                    `status` = #{status}, 											                    `teacher_name` = #{teacherName}							        </set>
        where id = #{id}
    </update>
	
	<delete id="delete">
		delete from appointment where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from appointment where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>