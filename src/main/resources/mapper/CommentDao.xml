<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.dao.CommentDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.example.demo.entity.CommentEntity" id="commentMap">
        <result property="id" column="id"/>
        <result property="teacherId" column="teacher_id"/>
        <result property="studentId" column="student_id"/>
        <result property="comment" column="comment"/>
        <result property="commentTime" column="comment_time"/>
    </resultMap>

    <select id="queryObject" resultMap="commentMap">
        select * from comment where id = #{value}
    </select>

	<select id="queryList" resultMap="commentMap">
		select * from comment
		<where>
			<if test="startTime != null and startTime.trim() != ''">
				and comment_time <![CDATA[ >= ]]> #{startTime}
			</if>
			<if test="endTime != null and endTime.trim() != ''">
				and comment_time <![CDATA[ <= ]]> #{endTime}
			</if>
		</where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from comment
		<where>
			<if test="startTime != null and startTime.trim() != ''">
				and comment_time <![CDATA[ >= ]]> #{startTime}
			</if>
			<if test="endTime != null and endTime.trim() != ''">
				and comment_time <![CDATA[ <= ]]> #{endTime}
			</if>
		</where>
	</select>
	 
	<insert id="save" parameterType="com.example.demo.entity.CommentEntity">
		insert into comment
		(
			`id`, 
			`teacher_id`, 
			`student_id`, 
			`comment`, 
			`comment_time`
		)
		values
		(
			#{id}, 
			#{teacherId}, 
			#{studentId}, 
			#{comment}, 
			#{commentTime}
		)
	</insert>

    <insert id="saveSelective" parameterType="com.example.demo.entity.CommentEntity">
        insert into comment
        (
									<if test="id != null">
                `id`,                 </if>
												<if test="teacherId != null">
                `teacher_id`,                 </if>
												<if test="studentId != null">
                `student_id`,                 </if>
												<if test="comment != null">
                `comment`,                 </if>
												<if test="commentTime != null">
                `comment_time`                </if>
					        )
        values
        (
									<if test="id != null">
                    #{id}, 				</if>
												<if test="teacherId != null">
                    #{teacherId}, 				</if>
												<if test="studentId != null">
                    #{studentId}, 				</if>
												<if test="comment != null">
                    #{comment}, 				</if>
												<if test="commentTime != null">
                    #{commentTime}				</if>
					        )
    </insert>



	<update id="updateSelective" parameterType="com.example.demo.entity.CommentEntity">
		update comment 
		<set>
			<if test="teacherId != null">`teacher_id` = #{teacherId}, </if>
			<if test="studentId != null">`student_id` = #{studentId}, </if>
			<if test="comment != null">`comment` = #{comment}, </if>
			<if test="commentTime != null">`comment_time` = #{commentTime}</if>
		</set>
		where id = #{id}
	</update>

    <update id="update" parameterType="com.example.demo.entity.CommentEntity">
        update comment
        <set>
														                    `teacher_id` = #{teacherId}, 											                    `student_id` = #{studentId}, 											                    `comment` = #{comment}, 											                    `comment_time` = #{commentTime}							        </set>
        where id = #{id}
    </update>
	
	<delete id="delete">
		delete from comment where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from comment where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>